vendors (id, name, created_at)
products (id, vendor_id, category_id, name, price, stock_quantity)
categories (id, name)
discounts (id, vendor_id, product_id, description, percentage, active, start_date, end_date) - product_id puede ser NULL si aplica a todo el vendor.
customers (id, name, email, signup_date)
orders (id, customer_id, order_date, total_amount)
order_items (id, order_id, product_id, quantity, price_at_order)

1) Cuenta cuántas órdenes (orders) se realizaron en cada mes del año actual. Muestra el mes (puedes usar el número del mes, 1-12) y el recuento total de órdenes para ese mes. Ordena los resultados por mes.
Objetivo: Filtrar por año (WHERE), extraer el mes de una fecha (EXTRACT, MONTH(), etc.), agrupar por mes (GROUP BY), contar (COUNT).

SELECT EXTRACT(MONTH FROM orders.order_date) AS month,COUNT(DISTINCT orders.id) AS count_orders FROM orders
WHERE EXTRACT(YEAR FROM orders.order_date) = EXTRACT(YEAR FROM CURRENT_DATE)
GROUP BY EXTRACT(MONTH FROM orders.order_date)
ORDER BY month

Order.where('EXTRACT(YEAR FROM orders.order_date) = EXTRACT(YEAR FROM ?)',Date.today).select('EXTRACT(MONTH FROM orders.oder_date) AS month, COUNT(DINSTINCT orders.id) AS count_orders').group('month').order('month')

2) Lista el nombre de todos los productos (products.name) junto con una columna adicional llamada discount_status que indique 'Sí' si el producto tiene un descuento activo actualmente, y 'No' si no lo tiene.
Un descuento activo se define como en el problema anterior que resolviste (problema 3 de la tanda anterior): existe un registro en discounts (directo o por vendedor) que está active = true y la fecha actual (CURRENT_DATE) está entre start_date y end_date.
Ordena los resultados por nombre de producto.
Objetivo: LEFT JOIN (para incluir todos los productos), condiciones complejas en el JOIN o en un CASE, lógica condicional (CASE WHEN), manejo de fechas y booleanos.

SELECT products.name AS product_name,
       CASE 
           WHEN (discounts.active = true 
                 AND CURRENT_DATE BETWEEN discounts.start_date AND discounts.end_date) THEN 'Sí'
           ELSE 'No'
       END AS discount_status
FROM products
LEFT JOIN discounts ON products.id = discounts.product_id 
                     OR (products.vendor_id = discounts.vendor_id AND discounts.product_id IS NULL)
                     GROUP BY products.id
ORDER BY products.name;

Product.joins('LEFT JOIN discounts ON products.id = discounts.product_id OR (products.vendor_id = discounts.vendor_id AND discounts.product_id IS NULL')).select("products.name, CASE WHEN(discounts.active=true AND CURRENT_DATE BETWEEN discounts.start_date AND discounts.end_date) THEN 'Si' ELSE 'No' END AS discount_status").order(:name)


3) (Medio/Difícil) Órdenes con Productos de Categorías Específicas:
Encuentra los IDs únicos de las órdenes (orders.id) que contienen al menos un producto (products) que pertenezca a la categoría 'Electrónicos' O a la categoría 'Libros' (categories.name).
Objetivo: JOINs múltiples (orders -> order_items -> products -> categories), filtrar por múltiples valores en una columna relacionada (WHERE ... IN (...) o WHERE ... OR ...), asegurar resultados únicos (DISTINCT).

SELECT DISTINCT orders.id FROM orders 
JOIN order_items ON orders.id=order_items.order_id
JOIN products ON products.id=order_items.product_id
JOIN categories ON products.category_id = categories.id
WHERE categories.name = 'Libros' OR categories.name = 'Electrónicos'

Order.joins(order_items:{product: :category}).where('categories.name = ? OR categories.name = ?','Libros','Electrónicos').select('orders.id').distinct
